const gitCheatsheet = {
  id: "git",
  title: "Git & GitHub",
  description: "Commandes essentielles, workflow et bonnes pratiques",
  image: "/images/html.svg",
  snippets: [
    {
      title: "üîê S√©curit√© & pr√©paration avant un push",
      code: `1. Installer dotenv pour g√©rer les variables sensibles :
   npm install dotenv

2. Cr√©er un fichier .env √† la racine du projet pour stocker les cl√©s secr√®tes (ex: MONGODB_URI, API_KEY).

3. Cr√©er un fichier .gitignore √† la racine du projet et y ajouter :
   node_modules
   .env

4. V√©rifier que dans package.json, la commande start est d√©finie :
   "scripts": {
     "start": "node index.js"
   }`,
    },
    {
      title: "üìå Initialisation & premier push",
      code: `git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin URL_DU_REPO
git push -u origin main`,
    },
    {
      title: "üîÑ Workflow classique apr√®s le 1er push",
      code: `git status   
git add .    
git commit -m "feat: message clair"
git push`,
    },
    {
      title: "üì• Cloner un projet existant",
      code: `git clone URL_DU_REPO
cd nom-du-projet
npm install`,
    },
    {
      title: "‚¨áÔ∏è R√©cup√©rer les derni√®res modifications",
      code: `git pull origin main`,
    },
    {
      title: "üåø Travailler avec des branches",
      code: `git checkout -b feature/ma-feature
git add .
git commit -m "feat: ajout de ma feature"
git push origin feature/ma-feature`,
    },
    {
      title: "üì¶ Importer du code externe dans un repo existant",
      code: `git init
git branch -M main
git add .
git commit -m "chore: import external code"
git remote remove origin 2>/dev/null || true
git remote add origin URL DU REPO
git fetch origin
git push --force-with-lease origin main:main`,
    },
    {
      title: "‚úÖ Bonnes pratiques Git",
      code: `* Toujours √©crire des messages de commit clairs :
   feat: nouvelle fonctionnalit√©
   fix: correction de bug
   chore: t√¢che technique (config, d√©pendances)
   docs: documentation

* Ne jamais commit tes cl√©s sensibles (toujours dans .env).
* Faire des petits commits fr√©quents plut√¥t qu‚Äôun gros commit flou.
* Utiliser les branches pour d√©velopper ‚Üí merge ensuite dans main.`,
    },
  ],
};

export default gitCheatsheet;
